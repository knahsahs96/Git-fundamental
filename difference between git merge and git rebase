# git merge
# git rebase 

these are two ways to intregate changes from one branch to another branch

# git merge 

-> git branch branch_name
-> git checkout branch_name
-> touch f1.txt
-> git add -A
-> git commit -m "file added"

* make some changes in master
-> git checkout master
-> touch m1.txt
-> git add -A
-> git commit -m "file added"


* after creating a branch some of the team member make some changes in master branch
so that changes will not reflect on branch (there will be a problem if changes is important for that branch
-> git checkout branch_name
-> git merge master

# git rebase 

-> git branch feature1
-> git checkout feature1
-> touch f1.txt
-> git add -A
-> git commit -m "file added"

* make some changes in master
-> git checkout master
-> touch m1.txt
-> git add -A
-> git commit -m "file added"


-> git checkout feature1
* if we do "rebase" instead of "merge", so git merge pull those changes on master that are made after creation of branch and then merge
-> git rebase master

