# difference between Central VCS(SVN) and Distributed VCS(Git)

Central VCS
-> Centralized version control systems are based on the idea that there is a single central copy of your project
somewhere (probably on a server), and programmers will commit their changes to this central copy.

“Committing” a change simply means recording the change in the central system.
Other programmers can then see this change. They can also pull down the change,
and the version control tool will automatically update the contents of any files that were changed.

WorkFlow:
->Pull down any changes other people have made from the central server.
->Make your changes, and make sure they work properly.
->Commit your changes to the central server, so other programmers can see them.


Distributed VCS
-> These systems do not necessarily rely on a central server to store all the versions of a project’s files.
Instead, every developer “clones” a copy of a repository and has the full history of the project on their own hard drive.
This copy (or “clone”) has all of the metadata of the original.

Advantages Over Centralized Version Control
->Performing actions other than pushing and pulling changesets is extremely fast because the tool only needs to access the hard drive,
not a remote server.
->Committing new changesets can be done locally without anyone else seeing them. Once you have a group of changesets ready,
you can push all of them at once.
->Everything but pushing and pulling can be done without an internet connection.
So you can work on a plane, and you won’t be forced to commit several bugfixes as one big changeset.
->Since each programmer has a full copy of the project repository,
they can share changes with one or two other people at a time if they want to get some feedback before showing the changes to everyone.
